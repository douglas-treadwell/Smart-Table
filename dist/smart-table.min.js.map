{"version":3,"sources":["smart-table.min.js"],"names":["ng","undefined","module","run","$templateCache","put","constant","pagination","template","itemsByPage","displayedPages","search","delay","inputEvent","select","mode","selectedClass","sort","ascentClass","descentClass","skipNatural","pipe","controller","$scope","$parse","$filter","$attrs","copyRefs","src","concat","updateSafeCopy","safeCopy","safeGetter","pipeAfterSafeCopy","ctrl","deepDelete","object","path","indexOf","partials","split","key","pop","parentPath","join","parentObject","Object","keys","length","filtered","lastSelected","propertyName","stTable","displayGetter","displaySetter","assign","orderBy","filter","tableState","start","totalItemCount","this","stSafeSrc","$watch","safeSrc","newValue","oldValue","sortBy","predicate","reverse","keepPage","isFunction","functionName","name","input","predicateObject","prop","isString","trim","output","number","numberOfPages","Math","ceil","slice","parseInt","row","rows","index","isSelected","getFilteredCollection","setFilterFunction","filterName","setSortFunction","sortFunctionName","preventPipeOnWatch","directive","restrict","link","scope","element","attr","stSetFilter","stSetSort","stConfig","$timeout","require","tableCtrl","promise","throttle","stDelay","event","stInputEvent","$observe","value","predicateExpression","stSearch","bind","evt","originalEvent","cancel","target","stSelectMode","$apply","addClass","removeClass","defaultSort","descendingFirst","func","getter","isArray","stSort","sortDefault","classAscent","stClassAscent","classDescent","stClassDescent","stateClasses","stSkipNatural","stDescendingFirst","stSortDefault","$eval","stItemsByPage","stDisplayedPages","stPageChange","templateUrl","attrs","stTemplate","redraw","end","i","paginationState","prevPage","currentPage","floor","max","abs","pages","numPages","push","newPage","selectPage","page","config","stPipe","pre","pipePromise","post","stTableService","id","register","$on","deregister","factory","$q","idCtrlMap","waiting","hasOwnProperty","resolve","get","waitFor","timeout","deferred","defer","reject","registeredController","angular"],"mappings":"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","file":"smart-table.min.js","sourcesContent":["(function (ng, undefined){\n    'use strict';\n\nng.module('smart-table', []).run(['$templateCache', function ($templateCache) {\n    $templateCache.put('template/smart-table/pagination.html',\n        '<nav ng-if=\"numPages && pages.length >= 2\"><ul class=\"pagination\">' +\n        '<li ng-repeat=\"page in pages\" ng-class=\"{active: page==currentPage}\"><a ng-click=\"selectPage(page)\">{{page}}</a></li>' +\n        '</ul></nav>');\n}]);\n\n\nng.module('smart-table')\n  .constant('stConfig', {\n    pagination: {\n      template: 'template/smart-table/pagination.html',\n      itemsByPage: 10,\n      displayedPages: 5\n    },\n    search: {\n      delay: 400, // ms\n      inputEvent: 'input'\n    },\n    select: {\n      mode: 'single',\n      selectedClass: 'st-selected'\n    },\n    sort: {\n      ascentClass: 'st-sort-ascent',\n      descentClass: 'st-sort-descent',\n      skipNatural: false,\n      delay:300\n    },\n    pipe: {\n      delay: 100 //ms\n    }\n  });\nng.module('smart-table')\n  .controller('stTableController', ['$scope', '$parse', '$filter', '$attrs', function StTableController ($scope, $parse, $filter, $attrs) {\n    var propertyName = $attrs.stTable;\n    var displayGetter = $parse(propertyName);\n    var displaySetter = displayGetter.assign;\n    var safeGetter;\n    var orderBy = $filter('orderBy');\n    var filter = $filter('filter');\n    var safeCopy = copyRefs(displayGetter($scope));\n    var tableState = {\n      sort: {},\n      search: {},\n      pagination: {\n        start: 0,\n        totalItemCount: 0\n      }\n    };\n    var filtered;\n    var pipeAfterSafeCopy = true;\n    var ctrl = this;\n    var lastSelected;\n\n    function copyRefs (src) {\n      return src ? [].concat(src) : [];\n    }\n\n    function updateSafeCopy () {\n      safeCopy = copyRefs(safeGetter($scope));\n      if (pipeAfterSafeCopy === true) {\n        ctrl.pipe();\n      }\n    }\n\n    function deepDelete (object, path) {\n      if (path.indexOf('.') != -1) {\n        var partials = path.split('.');\n        var key = partials.pop();\n        var parentPath = partials.join('.');\n        var parentObject = $parse(parentPath)(object)\n        delete parentObject[key];\n        if (Object.keys(parentObject).length == 0) {\n          deepDelete(object, parentPath);\n        }\n      } else {\n        delete object[path];\n      }\n    }\n\n    if ($attrs.stSafeSrc) {\n      safeGetter = $parse($attrs.stSafeSrc);\n      $scope.$watch(function () {\n        var safeSrc = safeGetter($scope);\n        return safeSrc && safeSrc.length ? safeSrc[0] : undefined;\n      }, function (newValue, oldValue) {\n        if (newValue !== oldValue) {\n          updateSafeCopy();\n        }\n      });\n      $scope.$watch(function () {\n        var safeSrc = safeGetter($scope);\n        return safeSrc ? safeSrc.length : 0;\n      }, function (newValue, oldValue) {\n        if (newValue !== safeCopy.length) {\n          updateSafeCopy();\n        }\n      });\n      $scope.$watch(function () {\n        return safeGetter($scope);\n      }, function (newValue, oldValue) {\n        if (newValue !== oldValue) {\n          tableState.pagination.start = 0;\n          updateSafeCopy();\n        }\n      });\n    }\n\n    /**\n     * sort the rows\n     * @param {Function | String} predicate - function or string which will be used as predicate for the sorting\n     * @param [reverse] - if you want to reverse the order\n     */\n    this.sortBy = function sortBy (predicate, reverse, keepPage) {\n      tableState.sort.predicate = predicate;\n      tableState.sort.reverse = reverse === true;\n\n      if (ng.isFunction(predicate)) {\n        tableState.sort.functionName = predicate.name;\n      } else {\n        delete tableState.sort.functionName;\n      }\n\n      if ( !keepPage ) {\n        tableState.pagination.start = 0;\n      }\n\n      return this.pipe();\n    };\n\n    /**\n     * search matching rows\n     * @param {String} input - the input string\n     * @param {String} [predicate] - the property name against you want to check the match, otherwise it will search on all properties\n     */\n    this.search = function search (input, predicate) {\n      var predicateObject = tableState.search.predicateObject || {};\n      var prop = predicate ? predicate : '$';\n\n      input = ng.isString(input) ? input.trim() : input;\n      $parse(prop).assign(predicateObject, input);\n      // to avoid to filter out null value\n      if (!input) {\n        deepDelete(predicateObject, prop);\n      }\n      tableState.search.predicateObject = predicateObject;\n      tableState.pagination.start = 0;\n      return this.pipe();\n    };\n\n    /**\n     * this will chain the operations of sorting and filtering based on the current table state (sort options, filtering, ect)\n     */\n    this.pipe = function pipe () {\n      var pagination = tableState.pagination;\n      var output;\n      filtered = tableState.search.predicateObject ? filter(safeCopy, tableState.search.predicateObject) : safeCopy;\n      if (tableState.sort.predicate) {\n        filtered = orderBy(filtered, tableState.sort.predicate, tableState.sort.reverse);\n      }\n      pagination.totalItemCount = filtered.length;\n      if (pagination.number !== undefined) {\n        pagination.numberOfPages = filtered.length > 0 ? Math.ceil(filtered.length / pagination.number) : 1;\n        pagination.start = pagination.start >= filtered.length ? (pagination.numberOfPages - 1) * pagination.number : pagination.start;\n        output = filtered.slice(pagination.start, pagination.start + parseInt(pagination.number));\n      }\n      displaySetter($scope, output || filtered);\n    };\n\n    /**\n     * select a dataRow (it will add the attribute isSelected to the row object)\n     * @param {Object} row - the row to select\n     * @param {String} [mode] - \"single\" or \"multiple\" (multiple by default)\n     */\n    this.select = function select (row, mode) {\n      var rows = copyRefs(displayGetter($scope));\n      var index = rows.indexOf(row);\n      if (index !== -1) {\n        if (mode === 'single') {\n          row.isSelected = row.isSelected !== true;\n          if (lastSelected) {\n            lastSelected.isSelected = false;\n          }\n          lastSelected = row.isSelected === true ? row : undefined;\n        } else {\n          rows[index].isSelected = !rows[index].isSelected;\n        }\n      }\n    };\n\n    /**\n     * take a slice of the current sorted/filtered collection (pagination)\n     *\n     * @param {Number} start - start index of the slice\n     * @param {Number} number - the number of item in the slice\n     */\n    this.slice = function splice (start, number) {\n      tableState.pagination.start = start;\n      tableState.pagination.number = number;\n      return this.pipe();\n    };\n\n    /**\n     * return the current state of the table\n     * @returns {{sort: {}, search: {}, pagination: {start: number}}}\n     */\n    this.tableState = function getTableState () {\n      return tableState;\n    };\n\n    this.getFilteredCollection = function getFilteredCollection () {\n      return filtered || safeCopy;\n    };\n\n    /**\n     * Use a different filter function than the angular FilterFilter\n     * @param filterName the name under which the custom filter is registered\n     */\n    this.setFilterFunction = function setFilterFunction (filterName) {\n      filter = $filter(filterName);\n    };\n\n    /**\n     * Use a different function than the angular orderBy\n     * @param sortFunctionName the name under which the custom order function is registered\n     */\n    this.setSortFunction = function setSortFunction (sortFunctionName) {\n      orderBy = $filter(sortFunctionName);\n    };\n\n    /**\n     * Usually when the safe copy is updated the pipe function is called.\n     * Calling this method will prevent it, which is something required when using a custom pipe function\n     */\n    this.preventPipeOnWatch = function preventPipe () {\n      pipeAfterSafeCopy = false;\n    };\n  }])\n  .directive('stTable', function () {\n    return {\n      restrict: 'A',\n      controller: 'stTableController',\n      link: function (scope, element, attr, ctrl) {\n\n        if (attr.stSetFilter) {\n          ctrl.setFilterFunction(attr.stSetFilter);\n        }\n\n        if (attr.stSetSort) {\n          ctrl.setSortFunction(attr.stSetSort);\n        }\n      }\n    };\n  });\n\nng.module('smart-table')\n  .directive('stSearch', ['stConfig', '$timeout','$parse', function (stConfig, $timeout, $parse) {\n    return {\n      require: '^stTable',\n      link: function (scope, element, attr, ctrl) {\n        var tableCtrl = ctrl;\n        var promise = null;\n        var throttle = attr.stDelay || stConfig.search.delay;\n        var event = attr.stInputEvent || stConfig.search.inputEvent;\n\n        attr.$observe('stSearch', function (newValue, oldValue) {\n          var input = element[0].value;\n          if (newValue !== oldValue && input) {\n            ctrl.tableState().search = {};\n            tableCtrl.search(input, newValue);\n          }\n        });\n\n        //table state -> view\n        scope.$watch(function () {\n          return ctrl.tableState().search;\n        }, function (newValue, oldValue) {\n          var predicateExpression = attr.stSearch || '$';\n          if (newValue.predicateObject && $parse(predicateExpression)(newValue.predicateObject) !== element[0].value) {\n            element[0].value = $parse(predicateExpression)(newValue.predicateObject) || '';\n          }\n        }, true);\n\n        // view -> table state\n        element.bind(event, function (evt) {\n          evt = evt.originalEvent || evt;\n          if (promise !== null) {\n            $timeout.cancel(promise);\n          }\n\n          promise = $timeout(function () {\n            tableCtrl.search(evt.target.value, attr.stSearch || '');\n            promise = null;\n          }, throttle);\n        });\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stSelectRow', ['stConfig', function (stConfig) {\n    return {\n      restrict: 'A',\n      require: '^stTable',\n      scope: {\n        row: '=stSelectRow'\n      },\n      link: function (scope, element, attr, ctrl) {\n        var mode = attr.stSelectMode || stConfig.select.mode;\n        element.bind('click', function () {\n          scope.$apply(function () {\n            ctrl.select(scope.row, mode);\n          });\n        });\n\n        scope.$watch('row.isSelected', function (newValue) {\n          if (newValue === true) {\n            element.addClass(stConfig.select.selectedClass);\n          } else {\n            element.removeClass(stConfig.select.selectedClass);\n          }\n        });\n      }\n    };\n  }]);\n\nng.module('smart-table')\n\t.directive('stSort', ['stConfig', '$parse', '$timeout', function (stConfig, $parse, $timeout) {\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\trequire: '^stTable',\n\t\t\tlink: function (scope, element, attr, ctrl) {\n\n\t\t\t\tvar predicate = attr.stSort;\n\t\t\t\tvar getter = $parse(predicate);\n\t\t\t\tvar index = 0;\n\t\t\t\tvar classAscent = attr.stClassAscent || stConfig.sort.ascentClass;\n\t\t\t\tvar classDescent = attr.stClassDescent || stConfig.sort.descentClass;\n\t\t\t\tvar stateClasses = [classAscent, classDescent];\n\t\t\t\tvar sortDefault;\n\t\t\t\tvar skipNatural = attr.stSkipNatural !== undefined ? attr.stSkipNatural : stConfig.sort.skipNatural;\n\t\t\t\tvar descendingFirst = attr.stDescendingFirst === 'true';\n\t\t\t\tvar promise = null;\n\t\t\t\tvar throttle = attr.stDelay || stConfig.sort.delay;\n\n\t\t\t\tif (attr.stSortDefault) {\n\t\t\t\t\tsortDefault = scope.$eval(attr.stSortDefault) !== undefined ? scope.$eval(attr.stSortDefault) : attr.stSortDefault;\n\t\t\t\t}\n\n\t\t\t\t//view --> table state\n\t\t\t\tfunction sort (defaultSort) {\n\t\t\t\t\tif ( descendingFirst ) {\n\t\t\t\t\t\tif ( index === 0 ) {\n\t\t\t\t\t\t\tindex = 2;\n\t\t\t\t\t\t} else if ( index === 2 ) {\n\t\t\t\t\t\t\tindex = 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar func;\n\t\t\t\t\tpredicate = ng.isFunction(getter(scope)) || ng.isArray(getter(scope)) ? getter(scope) : attr.stSort;\n\t\t\t\t\tif (index % 3 === 0 && !!skipNatural !== true) {\n\t\t\t\t\t\t//manual reset\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\tctrl.tableState().sort = {};\n\t\t\t\t\t\tctrl.tableState().pagination.start = 0;\n\t\t\t\t\t\tfunc = ctrl.pipe.bind(ctrl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunc = ctrl.sortBy.bind(ctrl, predicate, index % 2 === 0, defaultSort /* keeps current page if true */);\n\t\t\t\t\t}\n\t\t\t\t\tif (promise !== null) {\n\t\t\t\t\t\t$timeout.cancel(promise);\n\t\t\t\t\t}\n\t\t\t\t\tif (throttle < 0) {\n\t\t\t\t\t\tfunc();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpromise = $timeout(func, throttle);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telement.bind('click', function sortClick () {\n\t\t\t\t\tif (predicate) {\n\t\t\t\t\t\tscope.$apply(sort);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (sortDefault) {\n\t\t\t\t\tindex = sortDefault === 'reverse' ? 1 : 0;\n\t\t\t\t\tsort(true);\n\t\t\t\t}\n\n\t\t\t\t//table state --> view\n\t\t\t\tscope.$watch(function () {\n\t\t\t\t\treturn ctrl.tableState().sort;\n\t\t\t\t}, function (newValue) {\n\t\t\t\t\tif (newValue.predicate !== predicate) {\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\telement\n\t\t\t\t\t\t\t.removeClass(classAscent)\n\t\t\t\t\t\t\t.removeClass(classDescent);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = newValue.reverse === true ? 2 : 1;\n\t\t\t\t\t\telement\n\t\t\t\t\t\t\t.removeClass(stateClasses[index % 2])\n\t\t\t\t\t\t\t.addClass(stateClasses[index - 1]);\n\t\t\t\t\t}\n\t\t\t\t}, true);\n\t\t\t}\n\t\t};\n\t}]);\n\nng.module('smart-table')\n  .directive('stPagination', ['stConfig', function (stConfig) {\n    return {\n      restrict: 'EA',\n      require: '^stTable',\n      scope: {\n        stItemsByPage: '=?',\n        stDisplayedPages: '=?',\n        stPageChange: '&'\n      },\n      templateUrl: function (element, attrs) {\n        if (attrs.stTemplate) {\n          return attrs.stTemplate;\n        }\n        return stConfig.pagination.template;\n      },\n      link: function (scope, element, attrs, ctrl) {\n\n        scope.stItemsByPage = scope.stItemsByPage ? +(scope.stItemsByPage) : stConfig.pagination.itemsByPage;\n        scope.stDisplayedPages = scope.stDisplayedPages ? +(scope.stDisplayedPages) : stConfig.pagination.displayedPages;\n\n        scope.currentPage = 1;\n        scope.pages = [];\n\n        function redraw () {\n          var paginationState = ctrl.tableState().pagination;\n          var start = 1;\n          var end;\n          var i;\n          var prevPage = scope.currentPage;\n          scope.totalItemCount = paginationState.totalItemCount;\n          scope.currentPage = Math.floor(paginationState.start / paginationState.number) + 1;\n\n          start = Math.max(start, scope.currentPage - Math.abs(Math.floor(scope.stDisplayedPages / 2)));\n          end = start + scope.stDisplayedPages;\n\n          if (end > paginationState.numberOfPages) {\n            end = paginationState.numberOfPages + 1;\n            start = Math.max(1, end - scope.stDisplayedPages);\n          }\n\n          scope.pages = [];\n          scope.numPages = paginationState.numberOfPages;\n\n          for (i = start; i < end; i++) {\n            scope.pages.push(i);\n          }\n\n          if (prevPage !== scope.currentPage) {\n            scope.stPageChange({newPage: scope.currentPage});\n          }\n        }\n\n        //table state --> view\n        scope.$watch(function () {\n          return ctrl.tableState().pagination;\n        }, redraw, true);\n\n        //scope --> table state  (--> view)\n        scope.$watch('stItemsByPage', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            scope.selectPage(1);\n          }\n        });\n\n        scope.$watch('stDisplayedPages', redraw);\n\n        //view -> table state\n        scope.selectPage = function (page) {\n          if (page > 0 && page <= scope.numPages) {\n            ctrl.slice((page - 1) * scope.stItemsByPage, scope.stItemsByPage);\n          }\n        };\n\n        if (!ctrl.tableState().pagination.number) {\n          ctrl.slice(0, scope.stItemsByPage);\n        }\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stPipe', ['stConfig', '$timeout', function (config, $timeout) {\n    return {\n      require: 'stTable',\n      scope: {\n        stPipe: '='\n      },\n      link: {\n\n        pre: function (scope, element, attrs, ctrl) {\n\n          var pipePromise = null;\n\n          if (ng.isFunction(scope.stPipe)) {\n            ctrl.preventPipeOnWatch();\n            ctrl.pipe = function () {\n\n              if (pipePromise !== null) {\n                $timeout.cancel(pipePromise)\n              }\n\n              pipePromise = $timeout(function () {\n                scope.stPipe(ctrl.tableState(), ctrl);\n              }, config.pipe.delay);\n\n              return pipePromise;\n            }\n          }\n        },\n\n        post: function (scope, element, attrs, ctrl) {\n          ctrl.pipe();\n        }\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stTableId', ['stTableService', function (stTableService) {\n    return {\n      require: '^stTable',\n      scope: {\n        id: '@stTableId'\n      },\n      link: function (scope, element, attrs, ctrl) {\n        stTableService.register(scope.id, ctrl);\n\n        scope.$on('$destroy', function() {\n          stTableService.deregister(scope.id);\n        });\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .factory('stTableService', function ($q, $timeout) {\n    var idCtrlMap = { };\n    var waiting   = { };\n\n    return {\n      register: function(id, ctrl) {\n        idCtrlMap[id] = ctrl;\n\n        if ( waiting[id] ) {\n          for ( var index in waiting[id] ) {\n            if ( waiting[id].hasOwnProperty(index) ) {\n              waiting[id][index].resolve(ctrl);\n            }\n          }\n\n          delete waiting[id];\n        }\n      },\n\n      deregister: function(id) {\n        delete idCtrlMap[id];\n      },\n\n      get: function(id) {\n        return idCtrlMap[id];\n      },\n\n      waitFor: function(id, timeout) {\n        var deferred = $q.defer();\n\n        if ( timeout !== undefined ) {\n          $timeout(function() {\n            deferred.reject('Timed out waiting for StTableController ' + id);\n          }, timeout);\n        }\n\n        var registeredController = this.get(id);\n\n        if ( registeredController ) {\n          deferred.resolve(registeredController);\n        } else if ( waiting[id] ) {\n          waiting[id].push(deferred);\n        } else {\n          waiting[id] = [deferred];\n        }\n\n        return deferred.promise;\n      }\n    };\n  });\n\n})(angular);"],"sourceRoot":"/source/"}